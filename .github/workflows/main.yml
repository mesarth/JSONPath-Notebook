name: CI
on:
  push:
    branches:
      - main
    tags:
      - '**'
env:
  PACKAGE_NAME: jsonpath-notebook-${{ github.sha }}-${{ github.run_id }}-${{ github.run_number }}.vsix
  RELEASE_NAME: jsonpath-notebook-${{ github.ref_name }}.vsix
jobs:
  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'yarn'
      - run: yarn install
      - run: xvfb-run -a yarn test
        if: runner.os == 'Linux'
      - run: yarn test
        if: runner.os != 'Linux'
  package:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'yarn'
      - run: yarn install
      - run: yarn package -o "${{ env.PACKAGE_NAME }}"
      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: ./${{ env.PACKAGE_NAME }}
  release:
    if: startsWith(github.event.head_commit.message, 'release v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: package
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'yarn'
      - run: yarn install
      - name: Publish
        run: yarn run deploy
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
      - name: Download package artifact
        uses: actions/download-artifact@v3
        with:
          name: package
      - name: Copy package with version name
        run: cp ./${{ env.PACKAGE_NAME }} ./${{ env.RELEASE_NAME }}
      - name: Read Changelog
        id: changelog
        uses: mindsers/changelog-reader-action@v2
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.changelog.outputs.changes }}
          artifacts: ./${{ env.RELEASE_NAME }}
